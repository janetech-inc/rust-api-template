service: rust-api-template

package:
  exclude:
    - ./**
  include:
    - srcr/**
    - Cargo.toml
    - Cargo.lock
    - Dockerfile

plugins:
  - serverless-plugin-warmup
  - serverless-offline

custom:
  # customDomain:
  #   domainName: pubmed-extractor-${self:provider.stage}.system.com
  #   stage: "${self:provider.stage}"
  #   basePath: ""
  #   certificateName: "*.system.com"
  #   createRoute53Record: true
  warmup:
    default:
      enabled: true
      events:
        - schedule: rate(3 minutes)
      prewarm: true
      concurrency: 10

provider:
  name: aws
  architecture: arm64
  apiName: ${opt:stage,'dev'}-hls-plus
  runtime: python3.9
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  memorySize: 10240
  timeout: 30
  logRetentionInDays: 14
  versionFunctions: true

  environment:
    STAGE: ${self:provider.stage}
    AWS_LAMBDA:  true


  ecr:
    images:
      rustimage:
        path: ./

functions:
  stream:
    timeout: 28
    maximumEventAge: 60
    maximumRetryAttempts: 0
    image:
      name: rustimage
    warmup:
      default:
        enabled: true
    events:
      - httpApi:
          path: /
          method: GET
      - httpApi:
          path: /{proxy+}
          method: GET


  
